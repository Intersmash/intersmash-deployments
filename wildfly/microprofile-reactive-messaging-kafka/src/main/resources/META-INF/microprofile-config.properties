#
# Copyright 2021 Red Hat, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

# ---------------------------------------------------------------------------------------------------------------------#
# Connect to Kafka with SSL (no auth here)

# Commented out here since it's defined via an MP Config environment variable property by the EAP server.
# This way the tests can reuse this very same deployment
#mp.messaging.connector.smallrye-kafka.wildfly.elytron.ssl.context=kafka-ssl-test

# Configure the Kafka sink for serializer test (we write to it)
mp.messaging.outgoing.sslto.bootstrap.servers=amq-streams-kafka-bootstrap:9093
mp.messaging.outgoing.sslto.security.protocol=SSL
# Commented out here since it's defined via an MP Config environment variable property by the EAP server.
# This way the tests can reuse this very same deployment
#mp.messaging.outgoing.sslto.wildfly.elytron.ssl.context=kafka-ssl-test

mp.messaging.outgoing.sslto.connector=smallrye-kafka
mp.messaging.outgoing.sslto.topic=sslTesting
mp.messaging.outgoing.sslto.value.serializer=org.jboss.qa.appsint.tests.eapamqstreams.serializer.PersonSerializer

# Configure the Kafka source (we read from it)
mp.messaging.incoming.sslfrom.bootstrap.servers=amq-streams-kafka-bootstrap:9093
mp.messaging.incoming.sslfrom.security.protocol=SSL
# Commented out here since it's defined via an MP Config environment variable property by the EAP server.
# This way the tests can reuse this very same deployment
#mp.messaging.incoming.sslfrom.wildfly.elytron.ssl.context=kafka-ssl-test

mp.messaging.incoming.sslfrom.connector=smallrye-kafka
mp.messaging.incoming.sslfrom.topic=sslTesting
mp.messaging.incoming.sslfrom.value.deserializer=org.jboss.qa.appsint.tests.eapamqstreams.serializer.PersonDeserializer

# Needed as per https://github.com/smallrye/smallrye-reactive-messaging/issues/845 since the consumer
# joins after the messages are sent
mp.messaging.incoming.sslfrom.auto.offset.reset=earliest

# ---------------------------------------------------------------------------------------------------------------------#
# Connect to Kafka with Plaintext (no auth here)

# Configure the Kafka sink for tx test (we write to it)
mp.messaging.outgoing.tx-to-kafka.bootstrap.servers=amq-streams-kafka-bootstrap:9092
mp.messaging.outgoing.tx-to-kafka.connector=smallrye-kafka
mp.messaging.outgoing.tx-to-kafka.topic=testing
mp.messaging.outgoing.tx-to-kafka.value.serializer=org.apache.kafka.common.serialization.StringSerializer

# Configure the Kafka source for tx test (we read from it)
mp.messaging.incoming.tx-from-kafka.bootstrap.servers=amq-streams-kafka-bootstrap:9092
mp.messaging.incoming.tx-from-kafka.connector=smallrye-kafka
mp.messaging.incoming.tx-from-kafka.topic=testing
mp.messaging.incoming.tx-from-kafka.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer

# Needed as per https://github.com/smallrye/smallrye-reactive-messaging/issues/845 since the consumer
# joins after the messages are sent
mp.messaging.incoming.tx-from-kafka.auto.offset.reset=earliest

# ---------------------------------------------------------------------------------------------------------------------#
# Connect to Kafka with Plaintext (no auth here)

# Configure the Kafka sink for BasicMetadataBean test (we write to it)
mp.messaging.outgoing.to-kafka2or3-default-to-2.bootstrap.servers=amq-streams-kafka-bootstrap:9092
mp.messaging.outgoing.to-kafka2or3-default-to-2.connector=smallrye-kafka
# Unless specified in the outgoing metadata, we write to the testing2 topic
mp.messaging.outgoing.to-kafka2or3-default-to-2.topic=testing2
mp.messaging.outgoing.to-kafka2or3-default-to-2.key.serializer=org.apache.kafka.common.serialization.StringSerializer
mp.messaging.outgoing.to-kafka2or3-default-to-2.value.serializer=org.apache.kafka.common.serialization.IntegerSerializer

# Configure the Kafka source for BasicMetadataBean test (we read from it)
mp.messaging.incoming.from-kafka2.bootstrap.servers=amq-streams-kafka-bootstrap:9092
mp.messaging.incoming.from-kafka2.connector=smallrye-kafka
mp.messaging.incoming.from-kafka2.topic=testing2
mp.messaging.incoming.from-kafka2.key.deserializer=org.apache.kafka.common.serialization.StringDeserializer
mp.messaging.incoming.from-kafka2.value.deserializer=org.apache.kafka.common.serialization.IntegerDeserializer
# Needed as per https://github.com/smallrye/smallrye-reactive-messaging/issues/845 since the consumer
# joins after the messages are sent
mp.messaging.incoming.from-kafka2.auto.offset.reset=earliest

mp.messaging.incoming.from-kafka3.bootstrap.servers=amq-streams-kafka-bootstrap:9092
mp.messaging.incoming.from-kafka3.connector=smallrye-kafka
mp.messaging.incoming.from-kafka3.topic=testing3
mp.messaging.incoming.from-kafka3.key.deserializer=org.apache.kafka.common.serialization.StringDeserializer
mp.messaging.incoming.from-kafka3.value.deserializer=org.apache.kafka.common.serialization.IntegerDeserializer
# Needed as per https://github.com/smallrye/smallrye-reactive-messaging/issues/845 since the consumer
# joins after the messages are sent
mp.messaging.incoming.from-kafka3.auto.offset.reset=earliest

# ---------------------------------------------------------------------------------------------------------------------#
# Connect to Kafka with Plaintext (no auth here)

# Configure the Kafka sink for SpecifyPartitionBean
mp.messaging.outgoing.to-kafka4.bootstrap.servers=amq-streams-kafka-bootstrap:9092
mp.messaging.outgoing.to-kafka4.connector=smallrye-kafka
mp.messaging.outgoing.to-kafka4.topic=testing4
mp.messaging.outgoing.to-kafka4.key.serializer=org.apache.kafka.common.serialization.StringSerializer
mp.messaging.outgoing.to-kafka4.value.serializer=org.apache.kafka.common.serialization.IntegerSerializer

mp.messaging.incoming.from-kafka4.bootstrap.servers=amq-streams-kafka-bootstrap:9092
mp.messaging.incoming.from-kafka4.connector=smallrye-kafka
mp.messaging.incoming.from-kafka4.topic=testing4
mp.messaging.incoming.from-kafka4.key.deserializer=org.apache.kafka.common.serialization.StringDeserializer
mp.messaging.incoming.from-kafka4.value.deserializer=org.apache.kafka.common.serialization.IntegerDeserializer
# Needed as per https://github.com/smallrye/smallrye-reactive-messaging/issues/845 since the consumer
# joins after the messages are sent
mp.messaging.incoming.from-kafka4.auto.offset.reset=earliest

mp.messaging.outgoing.to-kafka5.bootstrap.servers=amq-streams-kafka-bootstrap:9092
mp.messaging.outgoing.to-kafka5.connector=smallrye-kafka
mp.messaging.outgoing.to-kafka5.topic=testing5
mp.messaging.outgoing.to-kafka5.key.serializer=org.apache.kafka.common.serialization.StringSerializer
mp.messaging.outgoing.to-kafka5.value.serializer=org.apache.kafka.common.serialization.IntegerSerializer

mp.messaging.incoming.from-kafka5.bootstrap.servers=amq-streams-kafka-bootstrap:9092
mp.messaging.incoming.from-kafka5.connector=smallrye-kafka
mp.messaging.incoming.from-kafka5.topic=testing5
mp.messaging.incoming.from-kafka5.key.deserializer=org.apache.kafka.common.serialization.StringDeserializer
mp.messaging.incoming.from-kafka5.value.deserializer=org.apache.kafka.common.serialization.IntegerDeserializer
# Needed as per https://github.com/smallrye/smallrye-reactive-messaging/issues/845 since the consumer
# joins after the messages are sent
mp.messaging.incoming.from-kafka5.auto.offset.reset=earliest
